name: Create debootstrap image

on:
  workflow_call: # This makes the workflow reusable by other workflows
    inputs: {}   # Define inputs here if needed
    secrets: {}  # Define secrets if needed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends debootstrap

      - name: Create debootstrap directory
        run: mkdir -p $GITHUB_WORKSPACE/debian-minimal-image

      - name: Run debootstrap with packages from file
        run: |
          # Extract package list from .github/workflows/package.list
          PACKAGES=$(tr '\n' ',' < "$GITHUB_WORKSPACE/.github/workflows/package.list" | sed 's/,$//')
    
          # If PACKAGES is non-empty, add it to the --include flag
          if [ -n "$PACKAGES" ]; then
            sudo debootstrap --arch=amd64 --include=$PACKAGES bookworm $GITHUB_WORKSPACE/debian-minimal-image http://deb.debian.org/debian/
          else
            echo "No packages to include from package.list"
            sudo debootstrap --arch=amd64 bookworm $GITHUB_WORKSPACE/debian-minimal-image http://deb.debian.org/debian/
          fi
          
      - name: List contents of the workspace to check if debian-minimal-image exists
        run: ls -l $GITHUB_WORKSPACE
    
      - name: List contents of debian-minimal-image directory
        run: |
          if [ -d "$GITHUB_WORKSPACE/debian-minimal-image" ]; then
            ls -l $GITHUB_WORKSPACE/debian-minimal-image
          else
            echo "Directory debian-minimal-image not found!"
            exit 1
          fi
    
      - name: Archive the debootstrap image and create metadata.yaml and metadata.tar.gz
        run: |
          cd $GITHUB_WORKSPACE
          sudo tar -czvf debian-minimal-image.tar.gz debian-minimal-image
          
          # Create metadata.yaml with a UNIX timestamp for creation_date
          echo "architecture: x86_64" > metadata.yaml
          echo "creation_date: $(date -u +%s)" >> metadata.yaml  # UNIX timestamp
          echo "properties:" >> metadata.yaml
          echo "  description: Debian Bookworm Minimal" >> metadata.yaml
          echo "  os: debian" >> metadata.yaml
          echo "  release: bookworm" >> metadata.yaml
          echo "  variant: minbase" >> metadata.yaml

          # Archive metadata.yaml as well
          sudo tar -czvf metadata.tar.gz metadata.yaml

      - name: Upload the image artifact
        uses: actions/upload-artifact@v4
        with:
          name: debian-minimal-image
          path: debian-minimal-image.tar.gz
      
      - name: Upload the metadata artifactr
        uses: actions/upload-artifact@v4
        with:
          name: metadata
          path: metadata.tar.gz
